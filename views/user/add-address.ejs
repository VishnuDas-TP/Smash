<%- include("../../views/partails/user/header.ejs") %>

<head>
    <!-- Include SweetAlert CSS & JS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>

<section class="pt-150 pb-150">
    <div class="container">
        <div class="row">
            <div class="col-lg-6 m-auto">
                <div class="address_wrap widget-taber-content p-30 background-white border-radius-5">
                    <div class="padding_eight_all bg-white">
                        <div class="heading_s1">
                            <h3 class="mb-30">Add New Address</h3>
                        </div>

                        <form id="addressForm" method="post" action="/save-address?id=<%= user %>">
                            <input type="hidden" name="userId" value="<%= user %>"> <!-- Hidden userId field -->
                            <div class="form-group">
                                <label for="addressType">Address Type</label>
                                <select id="addressType" name="addressType" class="form-control">
                                    <option value="Home">Home</option>
                                    <option value="Office">Office</option>
                                    <option value="Other">Other</option>
                                </select>
                                <span id="addressTypeErr" style="color:red;"></span>
                            </div>

                            <div class="form-group">
                                <label for="name">Name</label>
                                <input type="text" id="name" name="name" class="form-control">
                                <span id="nameErr" style="color:red;"></span>
                            </div>

                            <div class="form-group">
                                <label for="state">State</label>
                                <input type="text" id="state" name="state" class="form-control">
                                <span id="stateErr" style="color:red;"></span>
                            </div>

                            <div class="form-group">
                                <label for="city">City</label>
                                <input type="text" id="city" name="city" class="form-control">
                                <span id="cityErr" style="color:red;"></span>
                            </div>
                            
                            <div class="form-group">
                                <label for="landMark">Landmark</label>
                                <input type="text" id="landMark" name="landMark" class="form-control">
                                <span id="landMarkErr" style="color:red;"></span>
                            </div>

                            <div class="form-group">
                                <label for="pincode">Pincode</label>
                                <input type="text" id="pincode" name="pincode" class="form-control">
                                <span id="pincodeErr" style="color:red;"></span>
                            </div>

                            <div class="form-group">
                                <label for="phone">Phone</label>
                                <input type="text" id="phone" name="phone" class="form-control">
                                <span id="phoneErr" style="color:red;"></span>
                            </div>

                            <div class="form-group">
                                <label for="altPhone">Alternate Phone</label>
                                <input type="text" id="altPhone" name="altPhone" class="form-control">
                                <span id="altPhoneErr" style="color:red;"></span>
                            </div>

                            <div class="form-group">
                                <button type="submit" class="btn btn-fill-out btn-block hover-up">Save Address</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>



<script>
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.getElementById('addressForm');
        
        form.addEventListener('submit', function(event) {
            event.preventDefault();
            
            if (validateAddressForm()) {
                const formData = new FormData(form);
                const data = Object.fromEntries(formData);
                
                fetch(form.action, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                })
                .then(response => response.json())
                .then(response => {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: response.message,
                        confirmButtonText: 'OK'
                    }).then(() => {
                        window.location.href = '/address';
                    });
                })
                .catch(error => {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'There was an error saving the address.',
                        confirmButtonText: 'Try Again'
                    });
                });
            }
        });
    });
    
    function validateAddressForm() {
        // Clear previous error messages
        const errorFields = [
            'addressTypeErr', 'nameErr', 'cityErr', 'landMarkErr',
            'stateErr', 'pincodeErr', 'phoneErr', 'altPhoneErr'
        ];
        errorFields.forEach(id => {
            const element = document.getElementById(id);
            if (element) element.innerText = '';
        });
    
        let isValid = true;
    
        // Get field values
        const name = document.getElementById('name').value.trim();
        const city = document.getElementById('city').value.trim();
        const landMark = document.getElementById('landMark').value.trim();
        const state = document.getElementById('state').value.trim();
        const pincode = document.getElementById('pincode').value.trim();
        const phone = document.getElementById('phone').value.trim();
        const altPhone = document.getElementById('altPhone').value.trim();
    
        // Regular Expressions for Validation
        const namePattern = /^[A-Za-z\s]+$/;
        const pincodePattern = /^\d{6}$/;
        const phonePattern = /^\d{10}$/;
    
        // Validation functions
        function showError(fieldId, message) {
            const errorElement = document.getElementById(fieldId);
            if (errorElement) {
                errorElement.innerText = message;
            }
            isValid = false;
        }
    
        // Name validation
        if (!name) {
            showError('nameErr', 'Name is required.');
        } else if (!namePattern.test(name)) {
            showError('nameErr', 'Name should contain only alphabets and spaces.');
        }
    
        // City validation
        if (!city) {
            showError('cityErr', 'City is required.');
        } else if (!namePattern.test(city)) {
            showError('cityErr', 'City should contain only alphabets and spaces.');
        }
    
        // Landmark validation
        if (!landMark) {
            showError('landMarkErr', 'Landmark is required.');
        }
    
        // State validation
        if (!state) {
            showError('stateErr', 'State is required.');
        } else if (!namePattern.test(state)) {
            showError('stateErr', 'State should contain only alphabets and spaces.');
        }
    
        // Pincode validation
        if (!pincode) {
            showError('pincodeErr', 'Pincode is required.');
        } else if (!pincodePattern.test(pincode)) {
            showError('pincodeErr', 'Pincode must be exactly 6 digits.');
        }
    
        // Phone validation
        if (!phone) {
            showError('phoneErr', 'Phone number is required.');
        } else if (!phonePattern.test(phone) ||  phone === '0000000000') {
            showError('phoneErr', 'Phone number must be exactly 10 digits and cannot be zero.');
        }
    
        // Alternate phone validation (optional field)
        if (altPhone) {
            if (!phonePattern.test(altPhone)) {
                showError('altPhoneErr', 'Alternate phone number must be exactly 10 digits.');
            } else if (phone === altPhone) {
                showError('altPhoneErr', 'Phone number and alternate phone number must be different.');
            }
        }
    
        return isValid;
    }
    </script>


<%- include("../../views/partails/user/footer.ejs") %>