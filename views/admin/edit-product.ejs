<%- include("../../views/partails/admin/header.ejs") %>

    <head>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    </head>
    <style>
        .image-upload-box {
            border: 2px dashed #ccc;
            border-radius: 10px;
            height: 200px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            cursor: pointer;
            transition: background-color 0.3s ease;
            position: relative;
        }

        .image-upload-box:hover {
            background-color: #f8f9fa;
        }

        .image-upload-box img {
            max-width: 100%;
            max-height: 180px;
            object-fit: contain;
        }

        .error-message {
            color: red;
            font-size: 0.85rem;
            margin-top: 5px;
        }

        #imagePreviewModal .modal-dialog {
            max-width: 800px;
        }

        #imagePreviewModal .cropper-container {
            max-height: 500px;
        }

        .remove-image-btn {
            position: absolute;
            top: 10px;
            right: 10px;
            background: rgba(255, 0, 0, 0.7);
            color: white;
            border: none;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            z-index: 10;
        }
    </style>

    <div class="container-fluid">
        <section class="content-main">
            <div class="row">
                <div class="col-12">
                    <div class="content-header">
                        <h2 class="content-title">Edit Product</h2>
                    </div>
                </div>
                <div class="col-lg-8">
                    <div class="card mb-4">
                        <div class="card-body">
                            <form method="POST" action="/admin/editProduct?id=<%= product._id %>"
                                enctype="multipart/form-data" id="productForm">
                                <input type="hidden" name="productId" id="productId" value="<%= product._id %>">
                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <label for="product_name" class="form-label">Product Name</label>
                                        <input type="text" placeholder="Type here" name="productName"
                                            class="form-control" id="product_name" value="<%= product.productName %>">
                                        <div id="productName-error" class="error-message"></div>
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label class="form-label">Brand</label>
                                        <select class="form-select" name="brand">
                                            <% for(let i=0;i<brand.length;i++){%>
                                                <option value="<%= brand[i].brandName %>"
                                                    <%=product.brand===brand[i].brandName ? 'selected' : '' %>>
                                                    <%= brand[i].brandName %>
                                                </option>
                                                <% } %>
                                        </select>
                                        <div id="brand-error" class="error-message"></div>
                                    </div>
                                </div>
                                <div class="mb-4">
                                    <label class="form-label">Full description</label>
                                    <textarea placeholder="Type here" name="description" class="form-control border"
                                        rows="4"><%= product.description %></textarea>
                                    <div id="description-error" class="error-message"></div>
                                </div>
                                <div class="row">
                                    <!-- <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Regular price</label>
                                        <input placeholder="$" name="regularPrice" type="text" class="form-control border" value="<%= product.regularPrice %>">
                                        <div id="regularPrice-error" class="error-message"></div>
                                    </div>
                                </div> -->
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <label class="form-label">Sale price</label>
                                            <input placeholder="$" name="salePrice" type="text"
                                                class="form-control border" value="<%= product.salePrice %>">
                                            <div id="salePrice-error" class="error-message"></div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <label class="form-label">Stock</label>
                                            <input placeholder="" name="quantity" type="text"
                                                class="form-control border" value="<%= product.quantity %>">
                                            <div id="quantity-error" class="error-message"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <label class="form-label">Color</label>
                                            <input name="color" type="text" class="form-control border"
                                                value="<%= product.color %>">
                                            <div id="color-error" class="error-message"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="card mb-4">
                                    <div class="card-body">
                                        <div class="row gx-2">
                                            <div class="col-sm-6 mb-3">
                                                <label class="form-label">Category</label>
                                                <input class="form-control border" type="text"
                                                    value="<%= product.category.name %>" readonly>
                                                <div id="category-error" class="error-message"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="card mb-4">
                                    <div class="card-header">
                                        <h4>Product Images</h4>
                                    </div>
                                    <div class="card-body">
                                        <div class="row">
                                            <% for(let i=0;i<4;i++){ %>
                                                <div class="col-md-3 mb-3">
                                                    <div class="image-upload-box" id="imageBox<%= i %>"
                                                        data-index="<%= i %>">
                                                        <button type="button" class="remove-image-btn"
                                                            data-index="<%= i %>">&times;</button>
                                                        <img src="/uploads/product-images/<%= product.productImage[i] %>"
                                                            id="previewImage<%= i %>">
                                                        <div class="text-center">
                                                            <i class="fas fa-cloud-upload-alt"></i>
                                                            <p>Choose Image</p>
                                                        </div>
                                                        <input type="file" name="images" id="imageInput<%= i %>"
                                                            accept="image/*" style="display:none;">
                                                    </div>
                                                    <div id="imageError<%= i %>" class="error-message"></div>
                                                </div>
                                                <% } %>
                                        </div>
                                    </div>
                                </div>
                                <button type="submit" class="btn btn-primary" onclick="return validateForm()">Update
                                    Product</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>

    <!-- Image Preview and Crop Modal -->
    <div class="modal fade" id="imagePreviewModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Crop and Preview Image</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-8">
                            <img id="cropperImage" src="" alt="Image to crop" style="max-width: 100%;">
                        </div>
                        <div class="col-md-4">
                            <div id="previewContainer">
                                <div class="preview"></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="saveCroppedImage">Save Image</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
    <script>
        let currentImageIndex = 0;
        let cropper;
        let imageSrc;
        let imageName;

        document.querySelectorAll('.remove-image-btn').forEach(btn => {
            btn.addEventListener('click', function () {
                const productId = document.getElementById('productId').value; // Assuming productId is stored in an input element
                const index = this.dataset.index;
                const imageBox = document.getElementById(`imageBox${index}`);
                const previewImg = imageBox.querySelector('img');

                imageSrc = previewImg.src;
                imageName = imageSrc.split('/').pop();

                const textCenter = imageBox.querySelector('.text-center');
                const imageInput = imageBox.querySelector('input[type="file"]');
                previewImg.src = '';
                previewImg.style.display = 'none';
                textCenter.style.display = 'flex';
                imageInput.value = '';
                deleteSingleImage(imageName, productId);

                function deleteSingleImage(imageId, productId) {
                    fetch("/admin/deleteImage", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify({
                            imageNameToServer: imageId,
                            productIdToServer: productId,
                        }),
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.status === true) {

                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                        });
                }
            });
        });


        document.querySelectorAll('.image-upload-box').forEach(box => {
            const previewImg = box.querySelector('img');
            const textCenter = box.querySelector('div.text-center');
            const input = box.querySelector('input[type="file"]');

            box.addEventListener('click', function (e) {
                // Prevent click if remove button is clicked
                if (e.target.classList.contains('remove-image-btn')) return;
                input.click();
            });

            input.addEventListener('change', function (event) {
                currentImageIndex = this.closest('.image-upload-box').dataset.index;
                const file = event.target.files[0];

                if (file) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        const imagePreviewModal = new bootstrap.Modal(document.getElementById('imagePreviewModal'));
                        const cropperImage = document.getElementById('cropperImage');
                        cropperImage.src = e.target.result;

                        if (cropper) {
                            cropper.destroy();
                        }

                        imagePreviewModal.show();

                        setTimeout(() => {
                            cropper = new Cropper(cropperImage, {
                                aspectRatio: 1,
                                viewMode: 1,
                                preview: '.preview'
                            });
                        }, 500);
                    }
                    reader.readAsDataURL(file);
                }
            });
        });

        document.getElementById('saveCroppedImage').addEventListener('click', function () {
            const croppedCanvas = cropper.getCroppedCanvas();
            const previewImg = document.getElementById(`previewImage${currentImageIndex}`);
            const imageBox = document.getElementById(`imageBox${currentImageIndex}`);
            const imageInput = document.getElementById(`imageInput${currentImageIndex}`);
            const textCenter = imageBox.querySelector('div.text-center');
            const productId = document.getElementById('productId').value;

            previewImg.src = croppedCanvas.toDataURL('image/jpeg');
            previewImg.style.display = 'block';
            textCenter.style.display = 'none';

            croppedCanvas.toBlob(blob => {
                const file = new File([blob], `cropped-image-${currentImageIndex}.jpg`, { type: 'image/jpeg' });
                const dataTransfer = new DataTransfer();
                dataTransfer.items.add(file);
                imageInput.files = dataTransfer.files;

                // Trigger image replacement
                replaceImage(productId, imageInput);
            });

            const imagePreviewModal = bootstrap.Modal.getInstance(document.getElementById('imagePreviewModal'));
            imagePreviewModal.hide();
            cropper.destroy();
        });

        function replaceImage(productId, imageInput) {
            const file = imageInput.files[0];
            if (!file) {
                displayErrorMessage(
                    imageInput.closest('.image-upload-box').querySelector('.error-message'),
                    'Please select an image'
                );
                return;
            }

            const formData = new FormData();
            formData.append('image', file);
            formData.append('productId', productId);

            fetch('/admin/replace-image', {
                method: 'POST',
                body: formData
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.status) {
                        const imageBox = imageInput.closest('.image-upload-box');
                        const previewImg = imageBox.querySelector('img');
                        const textCenter = imageBox.querySelector('div.text-center');

                        previewImg.src = `/uploads/product-images/${data.newImageName}`;
                        previewImg.style.display = 'block';
                        textCenter.style.display = 'none';

                        alert('Image replaced successfully');
                    } else {
                        throw new Error(data.message || 'Failed to replace image');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    displayErrorMessage(
                        imageInput.closest('.image-upload-box').querySelector('.error-message'),
                        error.message || 'An error occurred while replacing the image'
                    );
                });
        }

        function displayErrorMessage(errorElement, message) {
            errorElement.innerText = message;
            errorElement.style.display = 'block';
        }
        function validateForm() {
            // Clear all error messages
            document.querySelectorAll('.error-message').forEach(error => {
                error.textContent = "";
            });

            // Input field references
            const name = document.getElementsByName('productName')[0].value.trim();
            const description = document.getElementsByName('description')[0].value.trim();
            const salePrice = document.getElementsByName('salePrice')[0].value.trim();
            const color = document.getElementsByName('color')[0].value.trim();
            const quantity = document.getElementsByName('quantity')[0].value.trim();

            let isValid = true;

            // Validation checks
            if (name === "" || name.length < 3) {
                document.getElementById('productName-error').textContent = "Product name must be at least 3 characters.";
                isValid = false;
            }

            if (description === "" || description.length < 10) {
                document.getElementById('description-error').textContent = "Description must be at least 10 characters.";
                isValid = false;
            }

            if (!/^\d+(\.\d{1,2})?$/.test(salePrice) || parseFloat(salePrice) <= 0) {
                document.getElementById('salePrice-error').textContent = "Sale price must be a valid positive number.";
                isValid = false;
            }

            if (!/^\d+$/.test(quantity) || parseInt(quantity, 10) <= 0) {
                document.getElementById('quantity-error').textContent = "Quantity must be a valid positive integer.";
                isValid = false;
            }

            if (color === "") {
                document.getElementById('color-error').textContent = "Color cannot be empty.";
                isValid = false;
            }

            let hasImage = false;
            images.forEach(input => {
                if (input.files.length > 0) {
                    hasImage = true;
                }
            });

            if (!hasImage) {
                displayErrorMessage('imageError1', 'Please select an image.');
                isValid = false;
            }

            return isValid;
        }

        function displayErrorMessage(elementId, message) {
            const errorElement = document.getElementById(elementId);
            errorElement.innerText = message;
            errorElement.style.display = "block";
        }

        function clearErrorMessages() {
            const errorElements = document.getElementsByClassName('error-message');
            Array.from(errorElements).forEach(element => {
                element.innerText = '';
            });
        }
    </script>

    <%- include("../../views/partails/admin/footer.ejs") %>